name: CI

on:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: full

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Check Clippy
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ninja-build nasm meson

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: cargo clippy --all --examples
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --examples

  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os || 'ubuntu-20.04' }}

    strategy:
      matrix:
        name:
          - linux / stable
          - linux / beta
          - linux / nightly
          - macOS / stable
          - "feat.: codec-aom"

        include:
          - name: linux / stable
            rust: stable
          - name: linux / beta
            rust: beta
          - name: linux / nightly
            rust: nightly

          - name: macOS / stable
            os: macOS-latest

          - name: "feat.: codec-aom"
            features: "--no-default-features --features codec-aom"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies (linux)
        if: matrix.os != 'macOS-latest'
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ninja-build nasm meson

      - name: Install dependencies (macOS)
        if: matrix.os == 'macOS-latest'
        run: |
          brew install ninja nasm meson

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust || 'stable' }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: ${{ matrix.features }} --all --examples

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }} --all

  minversion:
    name: Minimum version ${{ matrix.rust }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        rust: [1.36.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ninja-build nasm meson

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --examples
